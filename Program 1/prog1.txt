char compare the first character, if true,
	
	char compare second char, if true,
		
		string compare word, add to compare
	
	false, break

false, break



sort dictionary by first two letters, search by two letter

- 95,000 words
- 729 two letter combinations
- sort all words based off of integer equivalent value, using stringstream
- read list in dictionary, everytime there is a word with a new char 1 + char 2 value
  add that pointer to a seperate array.
- for every matching search afterwards, add increment a value in a sister array
- when reading words from book, jump to address based on two letter, search based on
  the number of items in sister array.
  

Minor optimization:
Place 'the' at the start of the 'th' section. (naturally happens, I think)

